resources:
- repo: self
  clean: 'true'

trigger:
  batch: 'true'
  branches:
    exclude:
    - '*'

pr:
  autoCancel: 'false'
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'f28a0588-1ffa-4ff3-871d-3a60c2f332ef'
  # functionAppName: 'kag-func2'
  # environmentName: 'kag-func2'

stages:
- stage: build
  jobs:
  - job: build
    displayName: build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'Prepare binaries'

    - task: PublishBuildArtifacts@1
      displayName: 'Create artifact'
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)'
        ArtifactName: 'drop'


# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: $(environmentName)
#     pool:
#       vmImage: $(vmImageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureFunctionApp@1
#             displayName: 'Azure Functions App Deploy: kag-func2'
#             inputs:
#               azureSubscription: '$(azureSubscription)'
#               appType: functionAppLinux
#               appName: $(functionAppName)
#               package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'